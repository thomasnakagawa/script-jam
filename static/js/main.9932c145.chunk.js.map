{"version":3,"sources":["sounds/KICK1.wav","sounds/HIHAT1.wav","sounds/SNARE4.wav","sounds/synth_note.ogg","sounds/synth2.ogg","Music.js","reducers/tracks.js","reducers/rootReducer.js","reducers/playback.js","reducers/keys.js","components/HeaderSection.js","actions/playbackActions.js","AudioPlayer.js","components/Keypad.js","actions/keyActions.js","components/KeysSection.js","components/UserKeyDetector.js","components/TextEditor.js","components/EditorSection.js","actions/trackActions.js","components/PlaybackParser.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","presetTracks","presetIndex","GetAPresetTrack","track","length","combineReducers","tracks","state","code","action","type","slice","index","map","newCode","showHighlight","lineHighlight","charHighlight","playback","isPlaying","tempo","trackPlayLine","trackIndex","line","keys","userKeys","scriptKeys","key","isPressed","connect","dispatch","startPlayback","stopPlayback","props","className","onClick","pitchForSemitone","semitone","pitches","Bass","Pizzicato","Sound","SynthNote","Sy2","SynthNote2","Kick","KickSound","Snare","SnareSound","Hat","HatSound","bassKeys","leadKeys","outputAudio","sound","pitch","stop","attack","play","sourceNode","playbackRate","value","PlaySound","keyIndex","indexOf","keyIndex2","keyCode","charCodeAt","Math","floor","Keypad","keyRows","keyRow","rowIndex","Key","keyClass","keyName","isVirtuallyPressed","onClickDown","onKeyDown","bind","onClickUp","onKeyUp","useState","setPressed","onMouseDown","onMouseUp","setUserKeyPressed","drumKeys","reverse","chunk","handleKeyPress","keyEvent","document","activeElement","tagName","handleKeyRelease","useEffect","addEventListener","removeEventListener","TextEditor","getMarkers","startRow","this","endRow","startCol","endCol","onCloseButtonClicked","disabled","canClose","style","width","height","mode","theme","onChange","onCodeChanged","name","editorProps","$blockScrolling","markers","Component","addTrack","removeTrack","editTrackCode","PlaybackParser","lineInterval","charIntervals","lastPressedKeys","HandlePlay","HandleStop","HandleLine","HandleChar","prevProps","setState","Array","setInterval","clearInterval","forEach","interval","clearPressedKeys","currentLineIndex","playingLines","lineSplit","split","currentLine","charAt","setTrackCursor","charIntvCopy","charIndex","nextLine","setTrackPlayingLine","setScriptKeyPressed","lastPressCopy","show","char","editTrackCursor","App","Boolean","window","location","hostname","match","ReactDOM","render","store","initialState","createStore","rootReducer","configureStore","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9932c145.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/KICK1.226fbf2c.wav\";","module.exports = __webpack_public_path__ + \"static/media/HIHAT1.7cb09c75.wav\";","module.exports = __webpack_public_path__ + \"static/media/SNARE4.3efa79aa.wav\";","module.exports = __webpack_public_path__ + \"static/media/synth_note.3c1ccfc4.ogg\";","module.exports = __webpack_public_path__ + \"static/media/synth2.3fb56212.ogg\";","const presetTracks = [\n`q\n e\nd\n s\n s\nd f \nd  d\n 1`,\n \n`t  u\n y\nt  g\n j \nt  u\n 5\ng   j\n k `\n];\n\nlet presetIndex = 0;\n\nexport default function GetAPresetTrack() {\n    const track = presetTracks[presetIndex];\n    presetIndex = (presetIndex + 1) % presetTracks.length;\n    return track;\n}\n","import GetAPresetTrack from '../Music';\n\nexport default (state = [{ code: GetAPresetTrack() }], action) => {\n  switch (action.type) {\n    case 'ADD_TRACK':\n      return [\n        ...state,\n        {\n          code: GetAPresetTrack()\n        }\n      ];\n    case 'REMOVE_TRACK':\n      return [\n        ...state.slice(0, action.index),\n        ...state.slice(action.index + 1)\n      ];\n    case 'EDIT_TRACK_CODE':\n      return state.map((track, index) => {\n        if (index === action.index) {\n          return {\n            ...track,\n            code: action.newCode\n          }\n        }\n        return track;\n      });\n    case 'EDIT_TRACK_CURSOR':\n      return state.map((track, index) => {\n        if (index === action.index) {\n          return {\n            ...track,\n            showHighlight: action.showHighlight,\n            lineHighlight: action.lineHighlight,\n            charHighlight: action.charHighlight\n          }\n        }\n        return track;\n      });\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\nimport tracks from './tracks';\nimport playback from './playback';\nimport keys from './keys';\n\nexport default combineReducers({\n  tracks,\n  playback,\n  keys\n});\n","export default (state={ isPlaying: false, tempo: 120, trackPlayLine: {} }, action) => {\n  switch (action.type) {\n    case \"START_PLAYBACK\":\n      return {\n        ...state,\n        isPlaying: true\n      };\n    case \"STOP_PLAYBACK\":\n      return {\n        ...state,\n        isPlaying: false,\n        trackPlayLine: {}\n      };\n    case \"SET_TEMPO\":\n      return {\n        ...state,\n        tempo: action.tempo\n      };\n    case 'SET_TRACK_PLAYING_LINE':\n      return {\n        ...state,\n        trackPlayLine: {\n          ...state.trackPlayLine,\n          [action.trackIndex]: action.line\n        }\n      };\n    default:\n      return state;\n  }\n};","export default (state={ userKeys: {}, scriptKeys: {} }, action) => {\n  switch (action.type) {\n    case \"SET_USER_KEY_PRESSED\":\n      return {\n        ...state,\n        userKeys: {\n          ...state.userKeys,\n          [action.key]: action.isPressed\n        }\n      };\n    case \"SET_SCRIPT_KEY_PRESSED\":\n      return {\n        ...state,\n        scriptKeys: {\n          ...state.scriptKeys,\n          [action.key]: action.isPressed\n        }\n      };\n    case \"CLEAR_PRESSED_KEYS\":\n      return {\n        userKeys: {},\n        scriptKeys: {}\n      };\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { startPlayback, stopPlayback } from '../actions/playbackActions';\n\nfunction HeaderSection(props) {\n  return (\n    <div className=\"header-section\">\n      <h1>Beat text thing</h1>\n      <button onClick={ props.isPlaying ? props.stopPlayback : props.startPlayback } >{ props.isPlaying ? \"stop\" : \"play\" }</button>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isPlaying: state.playback.isPlaying\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startPlayback: () => dispatch(startPlayback()),\n  stopPlayback: () => dispatch(stopPlayback())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderSection);\n","export const startPlayback = () => ({\n  type: 'START_PLAYBACK'\n});\n\nexport const stopPlayback = () => ({\n  type: 'STOP_PLAYBACK'\n});\n\nexport const setTempo = tempo => ({\n  type: 'SET_TEMPO',\n  tempo\n});\n\nexport const setTrackPlayingLine = (trackIndex, line) => ({\n  type: \"SET_TRACK_PLAYING_LINE\",\n  trackIndex,\n  line\n});\n","import KickSound from './sounds/KICK1.wav';\nimport HatSound from './sounds/HIHAT1.wav';\nimport SnareSound from './sounds/SNARE4.wav';\nimport SynthNote from './sounds/synth_note.ogg';\nimport SynthNote2 from './sounds/synth2.ogg';\nimport Pizzicato from 'pizzicato';\nimport { indexOf } from 'lodash';\n\nconst pitchForSemitone = function(semitone) {\n  return 2 ** (semitone / 12);\n}\n\nconst pitches = [\n  pitchForSemitone(-12),\n  pitchForSemitone(-10),\n  pitchForSemitone(-9),\n  pitchForSemitone(-7),\n  pitchForSemitone(-5),\n  pitchForSemitone(-4),\n  pitchForSemitone(-2),\n  pitchForSemitone(-1),\n  pitchForSemitone(0),\n  pitchForSemitone(2),\n  pitchForSemitone(3),\n  pitchForSemitone(5),\n  pitchForSemitone(7),\n  pitchForSemitone(8),\n  pitchForSemitone(10),\n  pitchForSemitone(11)\n]\n\nlet Bass = new Pizzicato.Sound(SynthNote, () => {});\nlet Sy2 = new Pizzicato.Sound(SynthNote2, () => {});\n\nlet Kick = new Pizzicato.Sound(KickSound, () => {});\nlet Snare = new Pizzicato.Sound(SnareSound, () => {});\nlet Hat = new Pizzicato.Sound(HatSound, () => {});\n\nconst bassKeys = [\"z\", \"x\", \"c\", \"v\", \"a\", \"s\", \"d\", \"f\", \"q\", \"w\", \"e\", \"r\", \"1\", \"2\", \"3\", \"4\"]\nconst leadKeys = [\"b\", \"n\", \"m\", \",\", \"g\", \"h\", \"j\", \"k\", \"t\", \"y\", \"u\", \"i\", \"5\", \"6\", \"7\", \"8\"]\n\nfunction outputAudio(sound, pitch) {\n  sound.stop();\n  sound.attack = 0;\n  sound.play();\n  sound.sourceNode.playbackRate.value = pitch || 1;\n}\n\n\nfunction PlaySound(key) {\n  if (!key || key === \" \") return;\n\n  const keyIndex = indexOf(bassKeys, key);\n  const keyIndex2 = indexOf(leadKeys, key);\n  if (keyIndex !== -1) {\n    outputAudio(Bass, pitches[keyIndex]);\n  }\n  else if (keyIndex2 !== -1) {\n    outputAudio(Sy2, pitches[keyIndex2]);\n  }\n  else {\n    const keyCode = key.charCodeAt(0);\n    if ((keyCode - 1) % 4 === 0) {\n      outputAudio(Kick, 1 + Math.floor(keyCode / 30));\n    }\n    else if (keyCode % 4 === 0) {\n      outputAudio(Snare, 1 + Math.floor(keyCode / 30));\n    }\n    else {\n      outputAudio(Hat, 1 + Math.floor(keyCode / 30));\n    }\n  }\n}\n\nexport default PlaySound;\n","import React, { useState } from 'react';\nimport PlaySound from '../AudioPlayer';\n\nexport default function Keypad(props) {\n  return (\n    <div className=\"Keypad\">\n      { props.keyRows.map((keyRow, rowIndex) => \n        <div key={ keyRow } className=\"row\">\n          { keyRow.map((key, keyIndex) => \n            <Key\n              keyClass={ props.keyClass }\n              key={ keyIndex }\n              keyName={ key }\n              isPressed={ !!props.userKeys[key] }\n              isVirtuallyPressed={ !!props.scriptKeys[key] }\n              onClickDown={ props.onKeyDown.bind(null, key) }\n              onClickUp={ props.onKeyUp.bind(null, key) }\n            />\n          ) }\n        </div>\n      ) }\n    </div>\n  );\n}\n\nfunction Key(props) {\n  const [isPressed, setPressed] = useState(false);\n\n  function handleMouseDown() {\n    props.onClickDown();\n    setPressed(true);\n    PlaySound(props.keyName);\n  }\n\n  function handleMouseUp() {\n    props.onClickUp();\n    setPressed(false);\n  }\n\n  return (\n    <div\n      className={ \"drum-pad\" + (props.isPressed || isPressed ? \" pressed\" : \"\" ) + (props.isVirtuallyPressed ? \" virtual-pressed\" : \"\") + \" \" + (props.keyName ? props.keyClass : \"spacer\") }\n      onMouseDown={ handleMouseDown }\n      onMouseUp={ handleMouseUp }\n    >\n      <p>{ props.keyName }</p>\n    </div>\n  );\n}\n","export const setUserKeyPressed = (key, isPressed) => ({\n  type: \"SET_USER_KEY_PRESSED\",\n  key,\n  isPressed\n});\n\nexport const setScriptKeyPressed = (key, isPressed) => ({\n  type: \"SET_SCRIPT_KEY_PRESSED\",\n  key,\n  isPressed\n});\n\nexport const clearPressedKeys = () => ({\n  type: \"CLEAR_PRESSED_KEYS\"\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Keypad from './Keypad';\nimport { setUserKeyPressed } from '../actions/keyActions';\nimport { chunk, reverse } from 'lodash';\n\nconst bassKeys = [\"z\", \"x\", \"c\", \"v\", \"a\", \"s\", \"d\", \"f\", \"q\", \"w\", \"e\", \"r\", \"1\", \"2\", \"3\", \"4\"]\nconst leadKeys = [\"b\", \"n\", \"m\", \",\", \"g\", \"h\", \"j\", \"k\", \"t\", \"y\", \"u\", \"i\", \"5\", \"6\", \"7\", \"8\"]\nconst drumKeys = [\".\", \"/\", null, null, \"l\", \";\", \"'\", null, \"o\", \"p\", \"[\", \"]\", \"9\", \"0\", \"-\", '=' ]\n\nfunction KeysSection(props) {\n  return (\n    <div className=\"keys-section\">\n      <Keypad\n        keyClass=\"bass\"\n        keyRows={ reverse(chunk(bassKeys, 4)) }\n        onKeyDown={ key => props.setUserKeyPressed(key, true) }\n        onKeyUp={ key => props.setUserKeyPressed(key, false) }\n        userKeys={ props.userKeys}\n        scriptKeys={ props.scriptKeys }\n      />\n      <Keypad\n        keyClass=\"lead\"\n        keyRows={ reverse(chunk(leadKeys, 4)) }\n        onKeyDown={ key => props.setUserKeyPressed(key, true) }\n        onKeyUp={ key => props.setUserKeyPressed(key, false) }\n        userKeys={ props.userKeys}\n        scriptKeys={ props.scriptKeys }\n      />\n      <Keypad\n        keyClass=\"drum\"\n        keyRows={ reverse(chunk(drumKeys, 4)) }\n        onKeyDown={ key => props.setUserKeyPressed(key, true) }\n        onKeyUp={ key => props.setUserKeyPressed(key, false) }\n        userKeys={ props.userKeys}\n        scriptKeys={ props.scriptKeys }\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userKeys: state.keys.userKeys,\n  scriptKeys: state.keys.scriptKeys\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setUserKeyPressed: (key, isPressed) => dispatch(setUserKeyPressed(key, isPressed))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeysSection);","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setUserKeyPressed } from '../actions/keyActions';\n\nimport PlaySound from '../AudioPlayer';\n\nfunction UserKeyDetector(props) {\n  function handleKeyPress(keyEvent) {\n    if (!props.isPlaying || document.activeElement.tagName !== \"TEXTAREA\") {\n      props.onKeyDown(keyEvent.key);\n      PlaySound(keyEvent.key);\n    }\n  }\n\n  function handleKeyRelease(keyEvent) {\n    if (!props.isPlaying || document.activeElement.tagName !== \"TEXTAREA\") {\n      props.onKeyUp(keyEvent.key);\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n    document.addEventListener('keyup', handleKeyRelease);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      document.removeEventListener('keyup', handleKeyRelease);\n    };\n  });\n\n  return null; // renderless component\n}\n\nconst mapStateToProps = state => ({\n  userKeys: state.keys.userKeys,\n  isPlaying: state.playback.isPlaying\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onKeyDown: key => dispatch(setUserKeyPressed(key, true)),\n  onKeyUp: key => dispatch(setUserKeyPressed(key, false))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserKeyDetector);\n","import React, { Component } from 'react';\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nexport default class TextEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.getMarkers = this.getMarkers.bind(this);\n  }\n\n  getMarkers() {\n    return [{\n      startRow: this.props.lineHighlight,\n      endRow: this.props.lineHighlight,\n      startCol: this.props.charHighlight,\n      endCol: this.props.charHighlight + 1,\n      className: this.props.showHighlight ? 'line-highlight' : '',\n      type: 'background'\n    }];\n  }\n\n  render() {\n    return (\n      <div className=\"text-editor\">\n        <div className=\"text-editor-header\">\n          <button onClick={ this.props.onCloseButtonClicked } disabled={ !this.props.canClose } >x</button>\n        </div>\n        <AceEditor\n          style={ { width: \"100%\", height: \"100%\" } }\n          value={ this.props.code }\n          mode=\"java\"\n          theme=\"github\"\n          onChange={ this.props.onCodeChanged }\n          name=\"UNIQUE_ID_OF_DIV\"\n          editorProps={{ $blockScrolling: true }}\n          markers={ this.getMarkers() }\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTrack, removeTrack, editTrackCode } from '../actions/trackActions';\nimport TextEditor from './TextEditor';\n\nfunction EditorSection(props) {\n  return (\n    <div className=\"editor-section\">\n      <div className=\"editor-section-header\">\n        <button onClick={ props.addTrack }>Add track</button>\n      </div>\n      <div className=\"editor-sections-tabs\">\n        {\n          (props.tracks || []).map((track, trackIndex) => (\n            <TextEditor\n              key={ trackIndex }\n              canClose={ props.tracks.length > 1 }\n              onCloseButtonClicked={ () => props.removeTrack(trackIndex) }\n              code={ track.code }\n              onCodeChanged={ newCode => props.editTrackCode(trackIndex, newCode) }\n              lineHighlight={ track.lineHighlight }\n              charHighlight={ track.charHighlight }\n              showHighlight={ track.showHighlight }\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  tracks: state.tracks\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addTrack: () => dispatch(addTrack()),\n  removeTrack: index => dispatch(removeTrack(index)),\n  editTrackCode: (index, code) => dispatch(editTrackCode(index, code))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorSection);\n","export const addTrack = () => ({\n  type: 'ADD_TRACK'\n});\n\nexport const removeTrack = index => ({\n  type: 'REMOVE_TRACK',\n  index\n});\n\nexport const editTrackCode = (index, newCode)=> ({\n  type: 'EDIT_TRACK_CODE',\n  index,\n  newCode\n});\n\nexport const editTrackCursor = (index, show, line, char) => ({\n  type: 'EDIT_TRACK_CURSOR',\n  index,\n  lineHighlight: line,\n  charHighlight: char,\n  showHighlight: show\n});\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PlaySound from '../AudioPlayer';\n\nimport { editTrackCursor } from '../actions/trackActions';\nimport { setScriptKeyPressed, clearPressedKeys } from '../actions/keyActions';\nimport { setTrackPlayingLine } from '../actions/playbackActions';\n\nclass PlaybackParser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineInterval: null,\n      charIntervals: [],\n      lastPressedKeys: []\n    }\n\n    this.HandlePlay = this.HandlePlay.bind(this);\n    this.HandleStop = this.HandleStop.bind(this);\n    this.HandleLine = this.HandleLine.bind(this);\n    this.HandleChar = this.HandleChar.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.isPlaying && this.props.isPlaying) {\n      this.HandlePlay();\n    }\n    if (prevProps.isPlaying && !this.props.isPlaying) {\n      this.HandleStop();\n    }\n  }\n\n  HandlePlay() {\n    this.setState({\n      charIntervals: new Array(this.props.tracks.length),\n      lastPressedKeys: new Array(this.props.tracks.length),\n      lineInterval: setInterval(this.HandleLine, (60000 / this.props.tempo))\n    }, () => {\n      this.HandleLine();\n    });\n  }\n\n  HandleStop() {\n    clearInterval(this.state.lineInterval);\n    this.state.charIntervals.forEach(interval => clearInterval(interval));\n    this.setState({\n      charIntervals: [],\n      lineInterval: null\n    });\n    this.props.clearPressedKeys();\n  }\n\n  HandleLine() {\n    this.props.tracks.forEach((track, trackIndex) => {\n      // stop any char intervals for this track\n      if (this.state.charIntervals[trackIndex]) {\n        clearInterval(this.state.charIntervals[trackIndex]);\n      }\n\n      // get the current line to play\n      const currentLineIndex = this.props.playingLines[trackIndex] || 0;\n      const lineSplit = track.code.split(/\\r\\n|\\r|\\n/);\n      const currentLine = lineSplit[currentLineIndex || 0];\n\n      // play the sound of the characters at interval\n      if (currentLine && currentLine.length > 0) {\n        this.HandleChar(currentLine.charAt(0), trackIndex);\n        this.props.setTrackCursor(trackIndex, true, currentLineIndex, 0);\n\n        if (currentLine.length > 1) {\n          const charIntvCopy = this.state.charIntervals.slice();\n\n          let charIndex = 1\n          charIntvCopy[trackIndex] = setInterval(() => {\n            this.HandleChar(currentLine.charAt(charIndex), trackIndex);\n            this.props.setTrackCursor(trackIndex, true, currentLineIndex, charIndex);\n\n            charIndex += 1;\n          }, (60000 / this.props.tempo) / currentLine.length);\n          this.setState({ charIntervals: charIntvCopy });\n        }\n      }\n\n      // setup for next line\n      const nextLine = (currentLineIndex + 1) % lineSplit.length;\n      this.props.setTrackPlayingLine(trackIndex, nextLine);\n    });\n  }\n\n  HandleChar(key, trackIndex) {\n    if (this.state.lastPressedKeys[trackIndex]) {\n      this.props.setScriptKeyPressed(this.state.lastPressedKeys[trackIndex], false);\n    }\n    this.props.setScriptKeyPressed(key, true);\n    PlaySound(key);\n\n    const lastPressCopy = this.state.lastPressedKeys.slice();\n    lastPressCopy[trackIndex] = key\n    this.setState({ lastPressedKeys: lastPressCopy });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.tracks,\n    playingLines: state.playback.trackPlayLine,\n    isPlaying: state.playback.isPlaying,\n    tempo: state.playback.tempo\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setTrackPlayingLine: (index, line) => dispatch(setTrackPlayingLine(index, line)),\n  setTrackCursor: (index, show, line, char) => dispatch(editTrackCursor(index, show, line, char)),\n  setScriptKeyPressed: (key, isPressed) => dispatch(setScriptKeyPressed(key, isPressed)),\n  clearPressedKeys: () => dispatch(clearPressedKeys())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaybackParser);","import React from 'react';\n\nimport './App.css';\nimport './style';\n\nimport HeaderSection from './components/HeaderSection';\nimport KeysSection from './components/KeysSection';\nimport UserKeyDetector from './components/UserKeyDetector';\nimport EditorSection from './components/EditorSection';\nimport PlaybackParser from './components/PlaybackParser';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <HeaderSection />\n      <KeysSection/>\n      <EditorSection/>\n\n      <UserKeyDetector/>\n      <PlaybackParser/>\n\n    {/*}\n      <pre style={{ position: \"absolute\", bottom: \"0\", zIndex: \"5\", maxWidth: \"100%\", textAlign: \"left\" }}>\n      {\n        JSON.stringify(props, null, 2)\n      }\n      </pre>\n    */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ configureStore() }>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState={}) {\n return createStore(\n  rootReducer,\n  initialState\n );\n}\n"],"sourceRoot":""}