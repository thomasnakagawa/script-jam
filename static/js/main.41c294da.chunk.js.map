{"version":3,"sources":["sounds/KICK1.wav","sounds/HIHAT1.wav","sounds/SNARE4.wav","sounds/synth_note.ogg","sounds/synth2.ogg","components/Keypad.js","components/KeyboardDetector.js","components/Sampler.js","components/Sequencer.js","components/SoundPlayer.js","components/PlayerControls.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Keypad","props","className","keyRows","map","keyRow","rowIndex","key","keyIndex","Key","keyName","isPressed","pressedKeys","isVirtuallyPressed","virtualKeys","includes","onClickDown","onUIClickDown","bind","onClickUp","onUIClickUp","useState","setPressed","onMouseDown","onMouseUp","KeyboardDetector","state","handleKeyPress","handleKeyRelease","handleUIClickDown","handleUIClickUp","document","addEventListener","this","removeEventListener","event","onKeyDown","setState","onKeyUp","React","Children","children","child","cloneElement","Component","Sampler","reverse","chunk","playableKeys","Sequencer","getMarkers","console","log","markerConfig","startRow","line","endRow","startCol","char","endCol","show","type","value","code","mode","theme","onChange","onCodeChange","name","editorProps","$blockScrolling","markers","pitchForSemitone","semitone","pitches","Bass","Pizzicato","Sound","SynthNote","Sy2","SynthNote2","Kick","KickSound","Snare","SnareSound","Hat","HatSound","SoundPlayer","playSound","sound","pitch","stop","attack","play","sourceNode","playbackRate","handleKeyDown","useCallback","indexOf","keyIndex2","playableKeys2","keyCode","charCodeAt","Math","floor","useEffect","forEach","virtualKey","userKey","PlayerControls","isPlaying","currentPlayingLine","playbackInterval","runInterval","handlePlay","handleStop","handleLine","clearInterval","setInterval","tempo","onVirtualKeys","lineSplit","tracks","split","nextLineIndex","length","currentLine","charAt","onMarkerChange","intervalLength","charIndex","newRunInterval","onClick","App","currentTrack","setVirtualKeys","setUserKey","setMarker","updateTracks","newCode","updatedTracks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.41c294da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/KICK1.226fbf2c.wav\";","module.exports = __webpack_public_path__ + \"static/media/HIHAT1.7cb09c75.wav\";","module.exports = __webpack_public_path__ + \"static/media/SNARE4.3efa79aa.wav\";","module.exports = __webpack_public_path__ + \"static/media/synth_note.3c1ccfc4.ogg\";","module.exports = __webpack_public_path__ + \"static/media/synth2.3fb56212.ogg\";","import React, { useState } from 'react';\n\nexport default function Keypad(props) {\n  return (\n    <div className=\"Keypad\">\n      { props.keyRows.map((keyRow, rowIndex) => \n        <div key={ keyRow } className=\"row\">\n          { keyRow.map((key, keyIndex) => \n            <Key\n              key={ keyIndex }\n              keyName={ key }\n              isPressed={ !!props.pressedKeys[key] }\n              isVirtuallyPressed={ !!props.virtualKeys.includes(key) }\n              onClickDown={ props.onUIClickDown.bind(null, key) }\n              onClickUp={ props.onUIClickUp.bind(null, key) }\n            />\n          ) }\n        </div>\n      ) }\n    </div>\n  );\n}\n\nfunction Key(props) {\n  const [isPressed, setPressed] = useState(false);\n\n  function handleMouseDown() {\n    props.onClickDown();\n    setPressed(true);\n  }\n\n  function handleMouseUp() {\n    props.onClickUp();\n    setPressed(false);\n  }\n\n  return (\n    <div\n      className={ \"drum-pad\" + (props.isPressed || isPressed ? \" pressed\" : \"\" ) + (props.isVirtuallyPressed ? \" virtual-pressed\" : \"\") }\n      onMouseDown={ handleMouseDown }\n      onMouseUp={ handleMouseUp }\n    >\n      <p>{ props.keyName }</p>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default class KeyboardDetector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressedKeys: {}\n    };\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleKeyRelease = this.handleKeyRelease.bind(this);\n    this.handleUIClickDown = this.handleUIClickDown.bind(this);\n    this.handleUIClickUp = this.handleUIClickUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n    document.addEventListener('keyup', this.handleKeyRelease);\n  }\n  \n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n    document.removeEventListener('keyup', this.handleKeyRelease);\n  }\n  \n  handleKeyPress(event) {\n    // prevent repeats from browser when key is held\n    if (!this.state.pressedKeys[event.key]) {\n      this.props.onKeyDown(event.key);\n\n      this.setState({\n        pressedKeys: { ...this.state.pressedKeys,\n          [event.key]: true\n        }\n      });\n    }\n  }\n\n  handleKeyRelease(event) {\n    this.props.onKeyUp(event.key);\n    this.setState({\n      pressedKeys: { ...this.state.pressedKeys,\n        [event.key]: false\n      }\n    });\n  }\n\n  handleUIClickDown(key) {\n    this.props.onKeyDown(key);\n  }\n\n  handleUIClickUp(key) {\n    this.props.onKeyUp(key);\n  }\n\n  render() {\n    return (\n      <>\n        { React.Children.map(this.props.children, child =>\n          React.cloneElement(child, {\n            pressedKeys: this.state.pressedKeys,\n            virtualKeys: this.props.virtualKeys,\n            onUIClickDown: this.handleUIClickDown,\n            onUIClickUp: this.handleUIClickUp\n          })\n        ) }\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport Keypad from './Keypad';\nimport KeyboardDetector from './KeyboardDetector';\nimport { chunk, reverse } from 'lodash';\n\nexport default function Sampler(props) {\n  return (\n    <div className=\"Sampler\">\n      <KeyboardDetector\n        onKeyDown={ props.onKeyDown }\n        onKeyUp={ props.onKeyUp }\n        virtualKeys={ props.virtualKeys }\n      >\n        <Keypad keyRows={ reverse(chunk(props.playableKeys, 4)) } />\n      </KeyboardDetector>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nexport default class Sequencer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMarkers = this.getMarkers.bind(this);\n  }\n\n  getMarkers() {\n    console.log(this.props.markerConfig);\n    return [{\n      startRow: this.props.markerConfig.line,\n      endRow: this.props.markerConfig.line,\n      startCol: this.props.markerConfig.char,\n      endCol: this.props.markerConfig.char + 1,\n      className: this.props.markerConfig.show ? 'line-highlight' : '',\n      type: 'background'\n    }];\n  }\n\n  render() {\n    return (\n      <AceEditor\n        value={ this.props.code }\n        mode=\"java\"\n        theme=\"github\"\n        onChange={ this.props.onCodeChange }\n        name=\"UNIQUE_ID_OF_DIV\"\n        editorProps={{ $blockScrolling: true }}\n        markers={ this.getMarkers() }\n      />\n    );\n  }\n}\n","import React, { useEffect, useCallback } from 'react';\nimport KickSound from '../sounds/KICK1.wav';\nimport HatSound from '../sounds/HIHAT1.wav';\nimport SnareSound from '../sounds/SNARE4.wav';\nimport SynthNote from '../sounds/synth_note.ogg';\nimport SynthNote2 from '../sounds/synth2.ogg';\nimport Pizzicato from 'pizzicato';\nimport { indexOf } from 'lodash';\n\nconst pitchForSemitone = function(semitone) {\n  return 2 ** (semitone / 12);\n}\n\nconst pitches = [\n  pitchForSemitone(-12),\n  pitchForSemitone(-10),\n  pitchForSemitone(-9),\n  pitchForSemitone(-7),\n  pitchForSemitone(-5),\n  pitchForSemitone(-4),\n  pitchForSemitone(-2),\n  pitchForSemitone(-1),\n  pitchForSemitone(0),\n  pitchForSemitone(2),\n  pitchForSemitone(3),\n  pitchForSemitone(5),\n  pitchForSemitone(7),\n  pitchForSemitone(8),\n  pitchForSemitone(10),\n  pitchForSemitone(11)\n]\n\nlet Bass = new Pizzicato.Sound(SynthNote, () => {});\nlet Sy2 = new Pizzicato.Sound(SynthNote2, () => {});\n\nlet Kick = new Pizzicato.Sound(KickSound, () => {});\nlet Snare = new Pizzicato.Sound(SnareSound, () => {});\nlet Hat = new Pizzicato.Sound(HatSound, () => {});\n\nexport default function SoundPlayer(props) {\n  function playSound(sound, pitch) {\n    sound.stop();\n    sound.attack = 0;\n    sound.play();\n    sound.sourceNode.playbackRate.value = pitch || 1;\n  }\n  \n  const handleKeyDown = useCallback(key => {\n    if (!key || key === \" \") return;\n    //const keyIndex = key.charCodeAt(0);\n    const keyIndex = indexOf(props.playableKeys, key);\n    const keyIndex2 = indexOf(props.playableKeys2, key);\n    if (keyIndex !== -1) {\n      playSound(Bass, pitches[keyIndex]);\n    }\n    else if (keyIndex2 !== -1) {\n      playSound(Sy2, pitches[keyIndex2]);\n    }\n    else {\n      const keyCode = key.charCodeAt(0);\n      if ((keyCode - 1) % 4 === 0) {\n        playSound(Kick, 1 + Math.floor(keyCode / 30));\n      }\n      else if (keyCode % 4 === 0) {\n        playSound(Snare, 1 + Math.floor(keyCode / 30));\n      }\n      else {\n        playSound(Hat, 1 + Math.floor(keyCode / 30));\n      }\n    }\n  }, [props.playableKeys, props.playableKeys2]);\n\n  useEffect(() => {\n    props.virtualKeys.forEach(virtualKey => {\n      handleKeyDown(virtualKey);\n    });\n  }, [props.virtualKeys, handleKeyDown]);\n  \n  useEffect(() => {\n    handleKeyDown(props.userKey)\n  }, [props.userKey, handleKeyDown]);\n\n  return <></>;\n}","import React, { Component } from 'react';\n\nexport default class PlayerControls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n      currentPlayingLine: -1,\n      playbackInterval: null,\n      runInterval: null\n    }\n\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n    this.handleLine = this.handleLine.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.playbackInterval) {\n      clearInterval(this.state.playbackInterval);\n    }\n    if (this.state.runInterval) {\n      clearInterval(this.state.runInterval);\n    }\n  }\n\n\n  handlePlay() {\n    // stop any existing playback interval\n    if (this.state.playbackInterval) {\n      clearInterval(this.state.playbackInterval);\n      this.setState({ playbackInterval: null });\n    }\n    \n    // immediately play the first line\n    this.handleLine();\n\n    // play lines at interval\n    this.setState({\n      isPlaying: true,\n      playbackInterval: setInterval(this.handleLine, 60000 / this.props.tempo)\n    });\n  }\n\n  handleStop() {\n    clearInterval(this.state.playbackInterval);\n    clearInterval(this.state.runInterval);\n    this.setState({ isPlaying: false, currentPlayingLine: -1, playbackInterval: null, runInterval: null });\n    this.props.onVirtualKeys([]);\n    //this.props.onMarkerChange({ line: 0, char: 0, show: false });\n\n  }\n\n  handleLine() {\n    // stop any run interval\n    if (this.runInterval) {\n      clearInterval(this.runInterval);\n      this.setState({ runInterval: null });\n    }\n\n    const lineSplit = this.props.tracks[0].code.split(/\\r\\n|\\r|\\n/);\n    const nextLineIndex = (this.state.currentPlayingLine + 1) % lineSplit.length;\n    this.setState({ currentPlayingLine: nextLineIndex });\n\n    const currentLine = lineSplit[nextLineIndex];\n\n    if (currentLine.length > 0) {\n      this.props.onVirtualKeys([currentLine.charAt(0)]);\n      this.props.onMarkerChange({ line: nextLineIndex, char: 0, show: true });\n      if (currentLine.length > 1) {\n        // play a run of multiple notes\n        const intervalLength = (60000 / this.props.tempo) / currentLine.length;\n        let charIndex = 0;\n        const newRunInterval = setInterval(() => {\n          charIndex += 1;\n          if (charIndex < currentLine.length) {\n            this.props.onVirtualKeys([currentLine.charAt(charIndex)]);\n            this.props.onMarkerChange({ line: nextLineIndex, char: charIndex, show: true });\n          }\n        }, intervalLength);\n        this.setState({ runInterval: newRunInterval })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={ this.handlePlay }>Play</button>\n        <button onClick={ this.handleStop }>Stop</button>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport Sampler from './components/Sampler';\nimport Sequencer from './components/Sequencer';\nimport SoundPlayer from './components/SoundPlayer';\nimport PlayerControls from './components/PlayerControls';\n\nconst playableKeys = [\"z\", \"x\", \"c\", \"v\", \"a\", \"s\", \"d\", \"f\", \"q\", \"w\", \"e\", \"r\", \"1\", \"2\", \"3\", \"4\"]\nconst playableKeys2 = [\"b\", \"n\", \"m\", \",\", \"g\", \"h\", \"j\", \"k\", \"t\", \"y\", \"u\", \"i\", \"5\", \"6\", \"7\", \"8\"]\n\nfunction App() {\n  const [tempo] = useState(120);\n  const [currentTrack] = useState(0);\n  const [virtualKeys, setVirtualKeys] = useState([]);\n  const [userKey, setUserKey] = useState(null);\n  const [markerConfig, setMarker] = useState({ line: 0, char: 0, show: false });\n\n  const [tracks, updateTracks] = useState([{\n    type: \"pitch\",\n    code:\n`q\n e\nd\n s\n s\nd f \nd  d\n 1`\n  }]);\n  return (\n    <div className=\"App\">\n      <Sampler\n        playableKeys={ playableKeys }\n        virtualKeys={ virtualKeys }\n        onKeyDown={ key => {\n          setUserKey(key);\n        } }\n        onKeyUp={ key => {\n          setUserKey(null);\n        } }\n      />\n\n      <PlayerControls\n        tempo={ tempo }\n        onVirtualKeys={ setVirtualKeys }\n        tracks={ tracks }\n        onMarkerChange={ setMarker }\n      />\n\n      <Sequencer\n        code={ tracks[currentTrack].code }\n        onCodeChange={ newCode => {\n          const updatedTracks = tracks;\n          updatedTracks[currentTrack].code = newCode;\n          updateTracks(updatedTracks);\n        } }\n        markerConfig={ markerConfig }\n      />\n\n      <SoundPlayer\n        playableKeys={ playableKeys }\n        playableKeys2={ playableKeys2 }\n        userKey={ userKey }\n        virtualKeys={ virtualKeys }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}